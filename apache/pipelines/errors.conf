input {

    # Getting Shell Input 
    stdin {
        codec => json
    }

    # Getting HTTP Input
    http {
        host => "127.0.0.1"
        port => 8080
        # type => "access"
    }

    file {
        path => "/etc/logstash/events/java_error.log"
        start_position => beginning

        # Multiline codec is used to get a multiline error output as single event
        # Negate is used to match the remaining lines in log and skip
        # auto_flush_interval is setting the timeout for waiting for next event
        codec => multiline {
            pattern => "^%{CATALINA_DATESTAMP}"
            negate => true
            what => "previous"
            auto_flush_interval => 5
        }

    }
}

filter {

    # Apache Error Log File Filtering
    mutate {
        replace => { type => "error" }
    }
    grok {
        match => { "message" => "%{CATALINA_DATESTAMP:[@metadata][timestamp]} %{LOGLEVEL:level} %{JAVACLASS:class}: (?<msg>.+?(?=(\r\n|\r|\n)))" }
    }
    date {
        match => { "[@metadata][timestamp]", "MMM dd, yyyy HH:mm:ss a"  }
    }
}

output {

    # Shell Output
    stdout {
        codec => rubydebug
        metadata => true
    }

    # File Output
    file {
        path => "%{type}_%{+yyyy_MM_dd}.log"
    }

}